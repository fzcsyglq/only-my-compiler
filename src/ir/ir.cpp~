#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>

#include "ir.h"

using namespace std;

void IR::CompUnit::add_ConstDef(string name) {
    IR::data result, left, right;

    result = IR::data();
    left = IR::data();
    right = IR::data(++cnt, pre_type, is_global);
    now.push_back(command(Alloca, result, left, right));
    if(is_global) ma[(is_global?"@":"%") + name] = cnt;
    
    result = IR::data(++cnt, lst_type, is_global);
    left = IR::data();
    right = IR::data(lst, lst_type, is_global);
    now.push_back(command(Load, result, left, right, is_const));


    left = IR::data(cnt, lst_type, is_global);
    right = IR::data(cnt - 1, pre_type, is_global);
    now.push_back(command(Store, result, left, right));
    return;
}

void IR::CompUnit::add_AddExp(IR::data left, IR::data right) {
    
}

void IR::CompUnit::add_MulExp(IR::data left, IR::data right) {
    
}

void IR::CompUnit::add_Int(int value) {
    IR::data result, left, right;

    result = IR::data();
    left = IR::data();
    right = IR::data(++cnt, Int, is_global);
    now.push_back(command(Alloca, result, left, right, is_const));

    result = IR::data();
    left = IR::data(0, Int, is_global), left.value = value;
    right = IR::data(cnt, Int, is_global);
    now.push_back(command(Store, result, left, right));

    lst = cnt;
    lst_type = Int;
    return;
}

void IR::CompUnit::add_Float(float value) {
    cnt++;
}

